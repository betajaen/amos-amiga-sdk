' translator
_TRANSLATOR_BASE = 0 : _TRANSLATOR_ID = 0
Global _TRANSLATOR_BASE, _TRANSLATOR_ID
Procedure LIB_OPEN_TRANSLATOR[P_ID]
 Lib Open P_ID, "translator.library", 0
 _TRANSLATOR_BASE = Lib Base(P_ID)
 _TRANSLATOR_ID = P_ID
End Proc[_TRANSLATOR_BASE]
Procedure LIB_CLOSE_TRANSLATOR
 Lib Close _TRANSLATOR_ID
End Proc
'  30 $ffe2 -$001e Translate(inputString,inputLength,outputBuffer,bufferSize)(a0,d0/a1,d1)
Procedure _TRANSLATE[P_INPUT_STRING,P_INPUT_LENGTH,P_OUTPUT_BUFFER,P_BUFFER_SIZE]
 Areg(0) = P_INPUT_STRING
 Dreg(0) = P_INPUT_LENGTH
 Areg(1) = P_OUTPUT_BUFFER
 Dreg(1) = P_BUFFER_SIZE
 R=Lib Call(_TRANSLATOR_ID, -$1E)
End Proc[R]
