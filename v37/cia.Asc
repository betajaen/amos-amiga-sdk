' cia
 = 0 : _CIA_ID = 0
Global , _CIA_ID
Procedure LIB_OPEN_CIA[P_ID]
 Lib Open P_ID, "CiaA.Resource" and "CiaB.Resource", 0
  = Lib Base(P_ID)
 _CIA_ID = P_ID
End Proc[]
Procedure LIB_CLOSE_CIA
 Lib Close _CIA_ID
End Proc
'   6 $fffa -$0006 AddICRVector(resource,iCRBit,interrupt)(a6,d0/a1)
Procedure _ADD_ICR_VECTOR[P_RESOURCE,P_I_CR_BIT,P_INTERRUPT]
 Areg(6) = P_RESOURCE
 Dreg(0) = P_I_CR_BIT
 Areg(1) = P_INTERRUPT
 R=Lib Call(_CIA_ID, -$6)
End Proc[R]
'  12 $fff4 -$000c RemICRVector(resource,iCRBit,interrupt)(a6,d0/a1)
Procedure _REM_ICR_VECTOR[P_RESOURCE,P_I_CR_BIT,P_INTERRUPT]
 Areg(6) = P_RESOURCE
 Dreg(0) = P_I_CR_BIT
 Areg(1) = P_INTERRUPT
 R=Lib Call(_CIA_ID, -$C)
End Proc[R]
'  18 $ffee -$0012 AbleICR(resource,mask)(a6,d0)
Procedure _ABLE_ICR[P_RESOURCE,P_MASK]
 Areg(6) = P_RESOURCE
 Dreg(0) = P_MASK
 R=Lib Call(_CIA_ID, -$12)
End Proc[R]
'  24 $ffe8 -$0018 SetICR(resource,mask)(a6,d0)
Procedure _SET_ICR[P_RESOURCE,P_MASK]
 Areg(6) = P_RESOURCE
 Dreg(0) = P_MASK
 R=Lib Call(_CIA_ID, -$18)
End Proc[R]
