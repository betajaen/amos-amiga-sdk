' keymap
_KEYMAP_BASE = 0 : _KEYMAP_ID = 0
Global _KEYMAP_BASE, _KEYMAP_ID
Procedure LIB_OPEN_KEYMAP[P_ID]
 Lib Open P_ID, "keymap.library", 0
 _KEYMAP_BASE = Lib Base(P_ID)
 _KEYMAP_ID = P_ID
End Proc[_KEYMAP_BASE]
Procedure LIB_CLOSE_KEYMAP
 Lib Close _KEYMAP_ID
End Proc
'  30 $ffe2 -$001e SetKeyMapDefault(keyMap)(a0)
Procedure _SET_KEY_MAP_DEFAULT[P_KEY_MAP]
 Areg(0) = P_KEY_MAP
 R=Lib Call(_KEYMAP_ID, -$1E)
End Proc[R]
'  36 $ffdc -$0024 AskKeyMapDefault()()
Procedure _ASK_KEY_MAP_DEFAULT
 R=Lib Call(_KEYMAP_ID, -$24)
End Proc[R]
'  42 $ffd6 -$002a MapRawKey(event,buffer,length,keyMap)(a0/a1,d1/a2)
Procedure _MAP_RAW_KEY[P_EVENT,P_BUFFER,P_LENGTH,P_KEY_MAP]
 Areg(0) = P_EVENT
 Areg(1) = P_BUFFER
 Dreg(1) = P_LENGTH
 Areg(2) = P_KEY_MAP
 R=Lib Call(_KEYMAP_ID, -$2A)
End Proc[R]
'  48 $ffd0 -$0030 MapANSI(string,count,buffer,length,keyMap)(a0,d0/a1,d1/a2)
Procedure _MAP_ANSI[P_STRING,P_COUNT,P_BUFFER,P_LENGTH,P_KEY_MAP]
 Areg(0) = P_STRING
 Dreg(0) = P_COUNT
 Areg(1) = P_BUFFER
 Dreg(1) = P_LENGTH
 Areg(2) = P_KEY_MAP
 R=Lib Call(_KEYMAP_ID, -$30)
End Proc[R]
