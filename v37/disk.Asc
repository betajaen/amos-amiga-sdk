' disk
_DISK_BASE = 0 : _DISK_ID = 0
Global _DISK_BASE, _DISK_ID
Procedure LIB_OPEN_DISK[P_ID]
 Lib Open P_ID, "disk.resource", 0
 _DISK_BASE = Lib Base(P_ID)
 _DISK_ID = P_ID
End Proc[_DISK_BASE]
Procedure LIB_CLOSE_DISK
 Lib Close _DISK_ID
End Proc
'   6 $fffa -$0006 AllocUnit(unitNum)(d0)
Procedure _ALLOC_UNIT[P_UNIT_NUM]
 Dreg(0) = P_UNIT_NUM
 R=Lib Call(_DISK_ID, -$6)
End Proc[R]
'  12 $fff4 -$000c FreeUnit(unitNum)(d0)
Procedure _FREE_UNIT[P_UNIT_NUM]
 Dreg(0) = P_UNIT_NUM
 R=Lib Call(_DISK_ID, -$C)
End Proc[R]
'  18 $ffee -$0012 GetUnit(unitPointer)(a1)
Procedure _GET_UNIT[P_UNIT_POINTER]
 Areg(1) = P_UNIT_POINTER
 R=Lib Call(_DISK_ID, -$12)
End Proc[R]
'  24 $ffe8 -$0018 GiveUnit()()
Procedure _GIVE_UNIT
 R=Lib Call(_DISK_ID, -$18)
End Proc[R]
'  30 $ffe2 -$001e GetUnitID(unitNum)(d0)
Procedure _GET_UNIT_ID[P_UNIT_NUM]
 Dreg(0) = P_UNIT_NUM
 R=Lib Call(_DISK_ID, -$1E)
End Proc[R]
'  36 $ffdc -$0024 ReadUnitID(unitNum)(d0)
Procedure _READ_UNIT_ID[P_UNIT_NUM]
 Dreg(0) = P_UNIT_NUM
 R=Lib Call(_DISK_ID, -$24)
End Proc[R]
